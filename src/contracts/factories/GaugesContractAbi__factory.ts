/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, BaseWalletLocked, AbstractAddress } from "fuels";
import { Interface, Contract } from "fuels";
import type {
  GaugesContractAbi,
  GaugesContractAbiInterface,
} from "../GaugesContractAbi";
const _abi = {
  types: [
    {
      typeId: 0,
      type: "()",
      components: [],
      typeParameters: null,
    },
    {
      typeId: 1,
      type: "(_, _)",
      components: [
        {
          name: "__tuple_element",
          type: 9,
          typeArguments: null,
        },
        {
          name: "__tuple_element",
          type: 15,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 2,
      type: "b256",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 3,
      type: "enum GaugesError",
      components: [
        {
          name: "ExcessiveVotes",
          type: 0,
          typeArguments: null,
        },
        {
          name: "GaugeAlreadyExists",
          type: 0,
          typeArguments: null,
        },
        {
          name: "InvalidStartTime",
          type: 0,
          typeArguments: null,
        },
        {
          name: "InvalidEpochLength",
          type: 0,
          typeArguments: null,
        },
        {
          name: "Uninitialized",
          type: 0,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 4,
      type: "enum Identity",
      components: [
        {
          name: "Address",
          type: 8,
          typeArguments: null,
        },
        {
          name: "ContractId",
          type: 9,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 5,
      type: "enum Option",
      components: [
        {
          name: "None",
          type: 0,
          typeArguments: null,
        },
        {
          name: "Some",
          type: 6,
          typeArguments: null,
        },
      ],
      typeParameters: [6],
    },
    {
      typeId: 6,
      type: "generic T",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 7,
      type: "raw untyped ptr",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 8,
      type: "struct Address",
      components: [
        {
          name: "value",
          type: 2,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 9,
      type: "struct ContractId",
      components: [
        {
          name: "value",
          type: 2,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 10,
      type: "struct Gauge",
      components: [
        {
          name: "last_updated_epoch",
          type: 15,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 11,
      type: "struct GaugeCreatedEvent",
      components: [
        {
          name: "pool",
          type: 9,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 12,
      type: "struct RawVec",
      components: [
        {
          name: "ptr",
          type: 7,
          typeArguments: null,
        },
        {
          name: "cap",
          type: 15,
          typeArguments: null,
        },
      ],
      typeParameters: [6],
    },
    {
      typeId: 13,
      type: "struct Vec",
      components: [
        {
          name: "buf",
          type: 12,
          typeArguments: [
            {
              name: "",
              type: 6,
              typeArguments: null,
            },
          ],
        },
        {
          name: "len",
          type: 15,
          typeArguments: null,
        },
      ],
      typeParameters: [6],
    },
    {
      typeId: 14,
      type: "struct VoteUpdatedEvent",
      components: [
        {
          name: "pool",
          type: 9,
          typeArguments: null,
        },
        {
          name: "voter",
          type: 4,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 15,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 15,
      type: "u64",
      components: null,
      typeParameters: null,
    },
  ],
  functions: [
    {
      inputs: [
        {
          name: "pool",
          type: 9,
          typeArguments: null,
        },
      ],
      name: "create_gauge",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "lock_up_contract",
          type: 9,
          typeArguments: null,
        },
        {
          name: "start_time",
          type: 15,
          typeArguments: null,
        },
        {
          name: "epoch_length",
          type: 15,
          typeArguments: null,
        },
      ],
      name: "initialize",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "votes",
          type: 13,
          typeArguments: [
            {
              name: "",
              type: 1,
              typeArguments: null,
            },
          ],
        },
      ],
      name: "vote",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [],
      name: "get_current_epoch",
      output: {
        name: "",
        type: 15,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "epoch",
          type: 15,
          typeArguments: null,
        },
      ],
      name: "get_epoch_start_time",
      output: {
        name: "",
        type: 15,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "gauge_id",
          type: 9,
          typeArguments: null,
        },
      ],
      name: "get_gauge_info",
      output: {
        name: "",
        type: 5,
        typeArguments: [
          {
            name: "",
            type: 10,
            typeArguments: null,
          },
        ],
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "epoch",
          type: 15,
          typeArguments: null,
        },
      ],
      name: "get_total_votes",
      output: {
        name: "",
        type: 15,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "user",
          type: 4,
          typeArguments: null,
        },
        {
          name: "gauge",
          type: 9,
          typeArguments: null,
        },
      ],
      name: "get_user_votes_for_gauge",
      output: {
        name: "",
        type: 15,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "epoch",
          type: 15,
          typeArguments: null,
        },
        {
          name: "gauge",
          type: 9,
          typeArguments: null,
        },
      ],
      name: "get_votes_for_gauge",
      output: {
        name: "",
        type: 15,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
  ],
  loggedTypes: [
    {
      logId: 0,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 1,
      loggedType: {
        name: "",
        type: 11,
        typeArguments: [],
      },
    },
    {
      logId: 2,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 3,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 4,
      loggedType: {
        name: "",
        type: 14,
        typeArguments: [],
      },
    },
    {
      logId: 5,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 6,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 7,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 8,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 9,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
  ],
  messagesTypes: [],
  configurables: [],
};

export class GaugesContractAbi__factory {
  static readonly abi = _abi;
  static createInterface(): GaugesContractAbiInterface {
    return new Interface(_abi) as unknown as GaugesContractAbiInterface;
  }
  static connect(
    id: string | AbstractAddress,
    walletOrProvider: BaseWalletLocked | Provider
  ): GaugesContractAbi {
    return new Contract(
      id,
      _abi,
      walletOrProvider
    ) as unknown as GaugesContractAbi;
  }
}
