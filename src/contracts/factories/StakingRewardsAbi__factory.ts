/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, BaseWalletLocked, AbstractAddress } from "fuels";
import { Interface, Contract } from "fuels";
import type {
  StakingRewardsAbi,
  StakingRewardsAbiInterface,
} from "../StakingRewardsAbi";
const _abi = {
  types: [
    {
      typeId: 0,
      type: "()",
      components: [],
      typeParameters: null,
    },
    {
      typeId: 1,
      type: "b256",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 2,
      type: "enum Identity",
      components: [
        {
          name: "Address",
          type: 4,
          typeArguments: null,
        },
        {
          name: "ContractId",
          type: 5,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 3,
      type: "enum StakingRewardsError",
      components: [
        {
          name: "AssetsStillStaked",
          type: 0,
          typeArguments: null,
        },
        {
          name: "ExtenstionAlreadyActive",
          type: 0,
          typeArguments: null,
        },
        {
          name: "ExtensionAlreadySet",
          type: 0,
          typeArguments: null,
        },
        {
          name: "NoDepositsToStake",
          type: 0,
          typeArguments: null,
        },
        {
          name: "NoExtensionSet",
          type: 0,
          typeArguments: null,
        },
        {
          name: "NoRewardsToClaim",
          type: 0,
          typeArguments: null,
        },
        {
          name: "NoRewardTokensProvided",
          type: 0,
          typeArguments: null,
        },
        {
          name: "NoStakedTokens",
          type: 0,
          typeArguments: null,
        },
        {
          name: "StakeZero",
          type: 0,
          typeArguments: null,
        },
        {
          name: "SenderNotOwner",
          type: 0,
          typeArguments: null,
        },
        {
          name: "WrongRewardToken",
          type: 0,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 4,
      type: "struct Address",
      components: [
        {
          name: "value",
          type: 1,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 5,
      type: "struct ContractId",
      components: [
        {
          name: "value",
          type: 1,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 6,
      type: "struct Deposit",
      components: [
        {
          name: "amount",
          type: 21,
          typeArguments: null,
        },
        {
          name: "staked_pools",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 7,
      type: "struct DepositEvent",
      components: [
        {
          name: "user",
          type: 2,
          typeArguments: null,
        },
        {
          name: "asset",
          type: 5,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 8,
      type: "struct Incentive",
      components: [
        {
          name: "owner",
          type: 2,
          typeArguments: null,
        },
        {
          name: "staking_token",
          type: 5,
          typeArguments: null,
        },
        {
          name: "reward_token",
          type: 5,
          typeArguments: null,
        },
        {
          name: "period_finish",
          type: 21,
          typeArguments: null,
        },
        {
          name: "reward_rate_scaled",
          type: 17,
          typeArguments: null,
        },
        {
          name: "last_update_time",
          type: 21,
          typeArguments: null,
        },
        {
          name: "reward_per_token_scaled_stored",
          type: 17,
          typeArguments: null,
        },
        {
          name: "total_staked",
          type: 21,
          typeArguments: null,
        },
        {
          name: "subsequent_period_finish",
          type: 21,
          typeArguments: null,
        },
        {
          name: "subsequent_period_reward_rate_scaled",
          type: 17,
          typeArguments: null,
        },
        {
          name: "subsequent_period_reward_amount",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 9,
      type: "struct IncentiveCreatedEvent",
      components: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
        {
          name: "owner",
          type: 2,
          typeArguments: null,
        },
        {
          name: "staking_token",
          type: 5,
          typeArguments: null,
        },
        {
          name: "reward_token",
          type: 5,
          typeArguments: null,
        },
        {
          name: "reward_amount",
          type: 21,
          typeArguments: null,
        },
        {
          name: "duration",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 10,
      type: "struct IncentiveExtendedEvent",
      components: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
        {
          name: "reward_amount",
          type: 21,
          typeArguments: null,
        },
        {
          name: "start_time",
          type: 21,
          typeArguments: null,
        },
        {
          name: "duration",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 11,
      type: "struct IncentiveExtensionCancelledEvent",
      components: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
        {
          name: "refund_amount",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 12,
      type: "struct IncentiveId",
      components: [
        {
          name: "value",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 13,
      type: "struct IncentiveOwnerChangedEvent",
      components: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
        {
          name: "new_owner",
          type: 2,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 14,
      type: "struct IncentiveSubsequentPeriodElapsedEvent",
      components: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 15,
      type: "struct RewardClaimedEvent",
      components: [
        {
          name: "user",
          type: 2,
          typeArguments: null,
        },
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 16,
      type: "struct StakedEvent",
      components: [
        {
          name: "user",
          type: 2,
          typeArguments: null,
        },
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 17,
      type: "struct U128",
      components: [
        {
          name: "upper",
          type: 21,
          typeArguments: null,
        },
        {
          name: "lower",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 18,
      type: "struct UnstakedEvent",
      components: [
        {
          name: "user",
          type: 2,
          typeArguments: null,
        },
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 19,
      type: "struct UserStake",
      components: [
        {
          name: "amount_staked",
          type: 21,
          typeArguments: null,
        },
        {
          name: "reward_per_token_scaled_paid",
          type: 17,
          typeArguments: null,
        },
        {
          name: "earned_unclaimed_rewards",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 20,
      type: "struct WithdrawnEvent",
      components: [
        {
          name: "user",
          type: 2,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 21,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 21,
      type: "u64",
      components: null,
      typeParameters: null,
    },
  ],
  functions: [
    {
      inputs: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
      ],
      name: "cancel_incentive_extension",
      output: {
        name: "",
        type: 21,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
        {
          name: "new_owner",
          type: 2,
          typeArguments: null,
        },
      ],
      name: "change_owner",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "staking_token",
          type: 5,
          typeArguments: null,
        },
        {
          name: "start_time",
          type: 21,
          typeArguments: null,
        },
        {
          name: "duration",
          type: 21,
          typeArguments: null,
        },
      ],
      name: "create_incentive",
      output: {
        name: "",
        type: 12,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
        {
          name: "payable",
          arguments: [],
        },
      ],
    },
    {
      inputs: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
        {
          name: "duration",
          type: 21,
          typeArguments: null,
        },
      ],
      name: "extend_incentive",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
        {
          name: "payable",
          arguments: [],
        },
      ],
    },
    {
      inputs: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
        {
          name: "recipient",
          type: 2,
          typeArguments: null,
        },
      ],
      name: "claim_reward",
      output: {
        name: "",
        type: 21,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [],
      name: "deposit",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "payable",
          arguments: [],
        },
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
      ],
      name: "stake",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
      ],
      name: "unstake",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "asset",
          type: 5,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 21,
          typeArguments: null,
        },
      ],
      name: "withdraw",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read", "write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "asset",
          type: 5,
          typeArguments: null,
        },
        {
          name: "account",
          type: 2,
          typeArguments: null,
        },
      ],
      name: "deposited_balance",
      output: {
        name: "",
        type: 6,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
        {
          name: "account",
          type: 2,
          typeArguments: null,
        },
      ],
      name: "earned",
      output: {
        name: "",
        type: 21,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
      ],
      name: "get_incentive",
      output: {
        name: "",
        type: 8,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
        {
          name: "account",
          type: 2,
          typeArguments: null,
        },
      ],
      name: "get_user_stake",
      output: {
        name: "",
        type: 19,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "incentive_id",
          type: 12,
          typeArguments: null,
        },
      ],
      name: "reward_per_token",
      output: {
        name: "",
        type: 17,
        typeArguments: null,
      },
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
  ],
  loggedTypes: [
    {
      logId: 0,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 1,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 2,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 3,
      loggedType: {
        name: "",
        type: 11,
        typeArguments: [],
      },
    },
    {
      logId: 4,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 5,
      loggedType: {
        name: "",
        type: 13,
        typeArguments: [],
      },
    },
    {
      logId: 6,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 7,
      loggedType: {
        name: "",
        type: 9,
        typeArguments: [],
      },
    },
    {
      logId: 8,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 9,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 10,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 11,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: [],
      },
    },
    {
      logId: 12,
      loggedType: {
        name: "",
        type: 14,
        typeArguments: [],
      },
    },
    {
      logId: 13,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 14,
      loggedType: {
        name: "",
        type: 15,
        typeArguments: [],
      },
    },
    {
      logId: 15,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 16,
      loggedType: {
        name: "",
        type: 7,
        typeArguments: [],
      },
    },
    {
      logId: 17,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 18,
      loggedType: {
        name: "",
        type: 14,
        typeArguments: [],
      },
    },
    {
      logId: 19,
      loggedType: {
        name: "",
        type: 16,
        typeArguments: [],
      },
    },
    {
      logId: 20,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 21,
      loggedType: {
        name: "",
        type: 14,
        typeArguments: [],
      },
    },
    {
      logId: 22,
      loggedType: {
        name: "",
        type: 18,
        typeArguments: [],
      },
    },
    {
      logId: 23,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 24,
      loggedType: {
        name: "",
        type: 20,
        typeArguments: [],
      },
    },
  ],
  messagesTypes: [],
  configurables: [],
};

export class StakingRewardsAbi__factory {
  static readonly abi = _abi;
  static createInterface(): StakingRewardsAbiInterface {
    return new Interface(_abi) as unknown as StakingRewardsAbiInterface;
  }
  static connect(
    id: string | AbstractAddress,
    walletOrProvider: BaseWalletLocked | Provider
  ): StakingRewardsAbi {
    return new Contract(
      id,
      _abi,
      walletOrProvider
    ) as unknown as StakingRewardsAbi;
  }
}
